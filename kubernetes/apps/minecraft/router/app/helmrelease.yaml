---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minecraft-router
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: minecraft-router
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    serviceAccount:
      main:
        enabled: true
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          minecraft-router:
            image:
              repository: ghcr.io/itzg/mc-router
              tag: 1.36.0@sha256:c864081f958b2df4182f85b357fcbc9b613749c3c4f23a0f2e4c3b0c5eb615a7
            env:
              TZ: America/Los_Angeles
              IN_KUBE_CLUSTER: "true"
              API_BINDING: ":8080"
              PORT: &port 25565
              AUTO_SCALE_UP: false
              CONNECTION_RATE_LIMIT: 10
              DEFAULT: limbo.minecraft.svc.cluster.local:25565
              METRICS_BACKEND: prometheus
              SIMPLIFY_SRV: true
              USE_PROXY_PROTOCOL: true
              TRUSTED_PROXIES: 172.30.0.0/16
              RECORD_LOGINS: true
              DEBUG: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 350m
                memory: 64Mi
              limits:
                cpu: 500m
                memory: 96Mi
        serviceAccount:
          identifier: main
    service:
      minecraft-router:
        ports:
          java:
            port: *port
          api:
            port: 8080
    route:
      api:
        kind: HTTPRoute
        hostnames: ["{{ .Release.Name }}.ok8.sh"]
        parentRefs:
          - name: internal
            namespace: networking
            sectionName: https
        rules:
          - backendRefs:
              - name: minecraft-router
                port: 8080
      minecraft:
        kind: TCPRoute
        parentRefs:
          - name: external
            namespace: networking
            sectionName: minecraft
          - name: internal
            namespace: networking
            sectionName: minecraft
        rules:
          - backendRefs:
              - name: minecraft-router
                port: *port
    serviceMonitor:
      minecraft-router:
        serviceName: minecraft-router
        endpoints:
          - port: api
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
